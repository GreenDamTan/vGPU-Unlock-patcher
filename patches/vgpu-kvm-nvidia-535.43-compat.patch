From: snowman <snowman@localhost.localdomain>
Subject: [PATCH] vgpu kvm nvidia 535.43 compat

we need this for the 525.105.14 nvidia-vgpu-vfio module when compiling
against 6.1+ kernels
---
 kernel/common/inc/nv-linux.h | 15 +--------------
 kernel/conftest.sh           |  3 +++
 2 files changed, 4 insertions(+), 14 deletions(-)

diff --git a/kernel/common/inc/nv-linux.h b/kernel/common/inc/nv-linux.h
index 40ac04d..7cb1608 100644
--- a/kernel/common/inc/nv-linux.h
+++ b/kernel/common/inc/nv-linux.h
@@ -633,8 +633,6 @@ static NvBool nv_numa_node_has_memory(int node_id)
         free_pages(ptr, order);                      \
     }
 
-extern NvU64 nv_shared_gpa_boundary;
-
 static inline pgprot_t nv_adjust_pgprot(pgprot_t vm_prot, NvU32 extra)
 {
     pgprot_t prot = __pgprot(pgprot_val(vm_prot) | extra);
@@ -646,18 +644,7 @@ static inline pgprot_t nv_adjust_pgprot(pgprot_t vm_prot, NvU32 extra)
      * If cc_mkdec() is present, then pgprot_decrypted() can't be used.
      */
 #if defined(NV_CC_MKDEC_PRESENT)
-    if (nv_shared_gpa_boundary != 0)
-    {
-        /*
-         * By design, a VM using vTOM doesn't see the SEV setting and
-         * for AMD with vTOM, *set* means decrypted.
-         */
-        prot =  __pgprot(nv_shared_gpa_boundary | (pgprot_val(vm_prot)));
-    }
-    else
-    {
-        prot =  __pgprot(__sme_clr(pgprot_val(vm_prot)));
-    }
+    prot =  __pgprot(__sme_clr(pgprot_val(vm_prot)));
 #else
     prot = pgprot_decrypted(prot);
 #endif
diff --git a/kernel/conftest.sh b/kernel/conftest.sh
index 984fc20..79a0443 100755
--- a/kernel/conftest.sh
+++ b/kernel/conftest.sh
@@ -6386,6 +6386,9 @@ case "$5" in
             if [ "$ARCH" = "aarch64" ]; then
                 ARCH="arm64"
             fi
+            if [ "$ARCH" = "x86" ]; then
+                ARCH="x86_64"
+            fi
 
             if [ "$VFIO_IOMMU_PRESENT" != "0" ] && [ "$KVM_PRESENT" != "0" ] ; then
 
-- 
2.30.2

